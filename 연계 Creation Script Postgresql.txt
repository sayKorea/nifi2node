--------------------------------------
-- DATA_LOAD
--------------------------------------
DROP TABLE IF EXISTS AUTH CASCADE;
CREATE TABLE IF NOT EXISTS AUTH (
  AUTH_CD 		TEXT PRIMARY KEY ,
  AUTH_NM 		TEXT NOT NULL ,
  AUTH_DESC 	TEXT NOT NULL ,
  REG_ID 		TEXT NOT NULL ,
  REG_DT 		DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID 		TEXT DEFAULT NULL,
  MOD_DT 		DATE DEFAULT CURRENT_DATE
);

COMMENT ON TABLE AUTH IS '권한';
COMMENT ON COLUMN AUTH.AUTH_CD IS '권한코드';
COMMENT ON COLUMN AUTH.AUTH_NM IS '권한명';
COMMENT ON COLUMN AUTH.AUTH_DESC IS '권한설명';
COMMENT ON COLUMN AUTH.REG_ID IS '생성자';
COMMENT ON COLUMN AUTH.REG_DT IS '생성일자';
COMMENT ON COLUMN AUTH.MOD_ID IS '수정자';
COMMENT ON COLUMN AUTH.MOD_DT IS '수정일자';


--------------------------------------
-- DATA_LOAD
--------------------------------------
DROP TABLE IF EXISTS DATA_LOAD CASCADE;
CREATE TABLE IF NOT EXISTS DATA_LOAD (
  DATA_LOAD_NO 		SERIAL PRIMARY KEY,
  REPO_NO 			INTEGER NOT NULL,
  META_NO 			INTEGER NOT NULL,
  JOB_NM 			TEXT NOT NULL ,
  JOB_DESC 			TEXT ,
  JOB_EXE_RESULT 	TEXT NULL,
  JOB_EXE_TYPE 		TEXT NULL,
  JOB_EXE_UNIT 		TEXT NOT NULL,
  JOB_EXE_UNIT_VAL 	TEXT NULL,
  JOB_EXE_TIME 		TEXT NULL,
  JOB_START_TIME 	DATE NULL,
  JOB_END_TIME 		DATE NULL,
  REG_ID			TEXT NOT NULL ,
  REG_DT			DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID			TEXT NULL,
  MOD_DT			DATE NULL
);
COMMENT ON TABLE DATA_LOAD IS '데이터적재';
COMMENT ON COLUMN DATA_LOAD.DATA_LOAD_NO IS '데이터적재번호';
COMMENT ON COLUMN DATA_LOAD.REPO_NO IS '저장소번호';
COMMENT ON COLUMN DATA_LOAD.META_NO IS '메타번호';
COMMENT ON COLUMN DATA_LOAD.JOB_NM IS '적재명';
COMMENT ON COLUMN DATA_LOAD.JOB_DESC IS '적재설명명';
COMMENT ON COLUMN DATA_LOAD.JOB_EXE_RESULT IS '적재수행결과 성공 실패';
COMMENT ON COLUMN DATA_LOAD.JOB_EXE_TYPE IS '적재수행구분 파일, 배치';
COMMENT ON COLUMN DATA_LOAD.JOB_EXE_UNIT IS '적재수행주기 즉시 ,분, 일, 주, 월';
COMMENT ON COLUMN DATA_LOAD.JOB_EXE_UNIT_VAL IS '적잭수행주기값';
COMMENT ON COLUMN DATA_LOAD.JOB_EXE_TIME IS '적잭수행시간';
COMMENT ON COLUMN DATA_LOAD.JOB_START_TIME IS '적재시작시간';
COMMENT ON COLUMN DATA_LOAD.JOB_END_TIME IS '적재종료시간';
COMMENT ON COLUMN DATA_LOAD.REG_ID IS '생성자';
COMMENT ON COLUMN DATA_LOAD.REG_DT IS '생성일자';
COMMENT ON COLUMN DATA_LOAD.MOD_ID IS '수정자';
COMMENT ON COLUMN DATA_LOAD.MOD_DT IS '수정일자';

--------------------------------------
-- DATA_LOAD_HISTORY
--------------------------------------
DROP TABLE IF EXISTS DATA_LOAD_HISTORY CASCADE;
CREATE TABLE IF NOT EXISTS DATA_LOAD_HISTORY (
  DATA_LOAD_HIS_NO 	SERIAL PRIMARY KEY,
  DATA_LOAD_NO 		INTEGER NOT NULL,
  REPO_NO 			INTEGER NOT NULL,
  META_NO 			INTEGER NOT NULL,
  JOB_NM 			TEXT NOT NULL ,
  JOB_DESC 			TEXT ,
  JOB_EXE_RESULT 	TEXT NULL,
  JOB_EXE_TYPE 		TEXT NULL,
  JOB_EXE_UNIT 		TEXT NOT NULL,
  JOB_EXE_UNIT_VAL 	TEXT NULL,
  JOB_EXE_TIME 		TEXT NULL,
  JOB_START_TIME 	DATE NULL,
  JOB_END_TIME 		DATE NULL,
  REG_ID			TEXT NOT NULL ,
  REG_DT			DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID			TEXT NULL,
  MOD_DT			DATE NULL
);

COMMENT ON TABLE DATA_LOAD_HISTORY IS '데이터적재이력';
COMMENT ON COLUMN DATA_LOAD_HISTORY.DATA_LOAD_NO IS '데이터적재번호';
COMMENT ON COLUMN DATA_LOAD_HISTORY.REPO_NO IS '저장소번호';
COMMENT ON COLUMN DATA_LOAD_HISTORY.META_NO IS '메타번호';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_NM IS '적재명';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_DESC IS '적재설명명';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_EXE_RESULT IS '적재수행결과 성공 실패';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_EXE_TYPE IS '적재수행구분 파일, 배치';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_EXE_UNIT IS '적재수행주기 즉시 ,분, 일, 주, 월';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_EXE_UNIT_VAL IS '적잭수행주기값';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_EXE_TIME IS '적잭수행시간';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_START_TIME IS '적재시작시간';
COMMENT ON COLUMN DATA_LOAD_HISTORY.JOB_END_TIME IS '적재종료시간';
COMMENT ON COLUMN DATA_LOAD_HISTORY.REG_ID IS '생성자';
COMMENT ON COLUMN DATA_LOAD_HISTORY.REG_DT IS '생성일자';
COMMENT ON COLUMN DATA_LOAD_HISTORY.MOD_ID IS '수정자';
COMMENT ON COLUMN DATA_LOAD_HISTORY.MOD_DT IS '수정일자';


--------------------------------------
-- DATA_LOAD_DETAIL
--------------------------------------
DROP TABLE IF EXISTS DATA_LOAD_DETAIL CASCADE;
CREATE TABLE IF NOT EXISTS DATA_LOAD_DETAIL (
  DATA_LOAD_NO 			INTEGER NOT NULL,
  PROCESS_NAME			TEXT NOT NULL,
  PROCESS_TYPE			TEXT NOT NULL,
  PROCESS_START_TIME 	DATE NULL,
  PROCESS_END_TIME 		DATE NULL,
  PROCESS_SUCCESS		TEXT NULL
);
COMMENT ON TABLE DATA_LOAD_DETAIL IS '데이터적재수행상세';
COMMENT ON COLUMN DATA_LOAD_DETAIL.DATA_LOAD_NO IS '데이터적재번호';
COMMENT ON COLUMN DATA_LOAD_DETAIL.PROCESS_NAME IS '프로세스명';
COMMENT ON COLUMN DATA_LOAD_DETAIL.PROCESS_TYPE IS '프로세스타입';
COMMENT ON COLUMN DATA_LOAD_DETAIL.PROCESS_START_TIME IS '프로세스시작시간';
COMMENT ON COLUMN DATA_LOAD_DETAIL.PROCESS_END_TIME IS '프로세스종료시간';
COMMENT ON COLUMN DATA_LOAD_DETAIL.PROCESS_SUCCESS IS '프로세스결과';

--------------------------------------
-- METADATA
--------------------------------------
DROP TABLE IF EXISTS META_DATA CASCADE;
CREATE TABLE IF NOT EXISTS META_DATA (
  META_NO     				SERIAL PRIMARY KEY,
  REPO_NO     				INTEGER NOT NULL,
  META_NM 					TEXT NOT NULL,
  META_DESC 				TEXT NULL,
  META_LICENSE 				TEXT NULL,
  META_AUTH 				TEXT NULL,
  META_SOURCE_HOST 			TEXT NULL,
  META_SOURCE_PORT 			TEXT NULL,
  META_SOURCE_USER 			TEXT NULL,
  META_SOURCE_PASS 			TEXT NULL,
  META_SOURCE_PATH 			TEXT NULL,
  META_SOURCE_NIFI_API_URL 	TEXT NULL,
  META_TARGET_HOST 			TEXT NULL,
  META_TARGET_PORT 			TEXT NULL,
  META_TARGET_USER 			TEXT NULL,
  META_TARGET_PASS 			TEXT NULL,
  META_TARGET_PATH 			TEXT NULL,
  META_TARGET_NIFI_API_URL 	TEXT NULL,
  META_VALID_STR 			TEXT NULL,
  META_SOURCE_PATH_TYPE 	TEXT NULL,
  META_TARGET_PATH_TYPE 	TEXT NULL,
  REG_ID					TEXT NOT NULL ,
  REG_DT					DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID					TEXT NULL,
  MOD_DT					DATE NULL
);

COMMENT ON TABLE META_DATA IS '메타데이터';
COMMENT ON COLUMN META_DATA.META_NO						IS '메타번호';
COMMENT ON COLUMN META_DATA.REPO_NO     	 			IS '저장소번호';
COMMENT ON COLUMN META_DATA.META_NM 					IS '메타명';
COMMENT ON COLUMN META_DATA.META_DESC 	 				IS '메타설명';
COMMENT ON COLUMN META_DATA.META_LICENSE  				IS '메타라이센스';
COMMENT ON COLUMN META_DATA.META_AUTH 	 				IS '메타접근권한';
COMMENT ON COLUMN META_DATA.META_SOURCE_HOST 			IS '메타소스 접근 호스트';
COMMENT ON COLUMN META_DATA.META_SOURCE_PORT 			IS '메타소스 접근 포트';
COMMENT ON COLUMN META_DATA.META_SOURCE_USER 			IS '메타소스 접근 사용자';
COMMENT ON COLUMN META_DATA.META_SOURCE_PASS 			IS '메타소스 접근 비밀번호';
COMMENT ON COLUMN META_DATA.META_SOURCE_PATH 			IS '메타소스 접근 경로';
COMMENT ON COLUMN META_DATA.META_SOURCE_NIFI_API_URL 	IS '메타소스 접근 NIFI API URL';
COMMENT ON COLUMN META_DATA.META_TARGET_HOST 			IS '메타타켓 접근 호스트';
COMMENT ON COLUMN META_DATA.META_TARGET_PORT 			IS '메타타켓 접근 포트`';
COMMENT ON COLUMN META_DATA.META_TARGET_USER 			IS '메타타켓 접근 사용자';
COMMENT ON COLUMN META_DATA.META_TARGET_PASS 			IS '메타타켓 접근 비밀번호';
COMMENT ON COLUMN META_DATA.META_TARGET_PATH 			IS '메타타켓 접근 경로';
COMMENT ON COLUMN META_DATA.META_TARGET_NIFI_API_URL 	IS '메타타켓 접근 NIFI API URL';
COMMENT ON COLUMN META_DATA.META_VALID_STR 				IS '메타확인 문자열 JSON 포맷';
COMMENT ON COLUMN META_DATA.META_SOURCE_PATH_TYPE 		IS '메타소스 접근 타입 SFTP, FTP';
COMMENT ON COLUMN META_DATA.META_TARGET_PATH_TYPE 		IS '메타타켓 접근 타입 SFTP, FTP';
COMMENT ON COLUMN META_DATA.REG_ID 						IS '생성자';
COMMENT ON COLUMN META_DATA.REG_DT 						IS '생성일자';
COMMENT ON COLUMN META_DATA.MOD_ID 						IS '수정자';
COMMENT ON COLUMN META_DATA.MOD_DT 						IS '수정일자';

--------------------------------------
-- METADATA_HISTORY
--------------------------------------
DROP TABLE IF EXISTS META_DATA_HISTORY CASCADE;
CREATE TABLE IF NOT EXISTS META_DATA_HISTORY (
  META_NO     				SERIAL PRIMARY KEY,
  REPO_NO     				INTEGER NOT NULL,
  META_NM 					TEXT NOT NULL,
  META_DESC 				TEXT NULL,
  META_LICENSE 				TEXT NULL,
  META_AUTH 				TEXT NULL,
  META_SOURCE_HOST 			TEXT NULL,
  META_SOURCE_PORT 			TEXT NULL,
  META_SOURCE_USER 			TEXT NULL,
  META_SOURCE_PASS 			TEXT NULL,
  META_SOURCE_PATH 			TEXT NULL,
  META_SOURCE_NIFI_API_URL 	TEXT NULL,
  META_TARGET_HOST 			TEXT NULL,
  META_TARGET_PORT 			TEXT NULL,
  META_TARGET_USER 			TEXT NULL,
  META_TARGET_PASS 			TEXT NULL,
  META_TARGET_PATH 			TEXT NULL,
  META_TARGET_NIFI_API_URL 	TEXT NULL,
  META_VALID_STR 			TEXT NULL,
  META_SOURCE_PATH_TYPE 	TEXT NULL,
  META_TARGET_PATH_TYPE 	TEXT NULL,
  REG_ID					TEXT NOT NULL ,
  REG_DT					DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID					TEXT NULL,
  MOD_DT					DATE NULL
);

COMMENT ON TABLE META_DATA_HISTORY IS '메타데이터';
COMMENT ON COLUMN META_DATA_HISTORY.META_NO						IS '메타번호';
COMMENT ON COLUMN META_DATA_HISTORY.REPO_NO     	 			IS '저장소번호';
COMMENT ON COLUMN META_DATA_HISTORY.META_NM 					IS '메타명';
COMMENT ON COLUMN META_DATA_HISTORY.META_DESC 	 				IS '메타설명';
COMMENT ON COLUMN META_DATA_HISTORY.META_LICENSE  				IS '메타라이센스';
COMMENT ON COLUMN META_DATA_HISTORY.META_AUTH 	 				IS '메타접근권한';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_HOST 			IS '메타소스 접근 호스트';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_PORT 			IS '메타소스 접근 포트';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_USER 			IS '메타소스 접근 사용자';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_PASS 			IS '메타소스 접근 비밀번호';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_PATH 			IS '메타소스 접근 경로';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_NIFI_API_URL 	IS '메타소스 접근 NIFI API URL';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_HOST 			IS '메타타켓 접근 호스트';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_PORT 			IS '메타타켓 접근 포트`';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_USER 			IS '메타타켓 접근 사용자';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_PASS 			IS '메타타켓 접근 비밀번호';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_PATH 			IS '메타타켓 접근 경로';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_NIFI_API_URL 	IS '메타타켓 접근 NIFI API URL';
COMMENT ON COLUMN META_DATA_HISTORY.META_VALID_STR 				IS '메타확인 문자열 JSON 포맷';
COMMENT ON COLUMN META_DATA_HISTORY.META_SOURCE_PATH_TYPE 		IS '메타소스 접근 타입 SFTP, FTP';
COMMENT ON COLUMN META_DATA_HISTORY.META_TARGET_PATH_TYPE 		IS '메타타켓 접근 타입 SFTP, FTP';
COMMENT ON COLUMN META_DATA_HISTORY.REG_ID 						IS '생성자';
COMMENT ON COLUMN META_DATA_HISTORY.REG_DT 						IS '생성일자';
COMMENT ON COLUMN META_DATA_HISTORY.MOD_ID 						IS '수정자';
COMMENT ON COLUMN META_DATA_HISTORY.MOD_DT 						IS '수정일자';



--------------------------------------
-- ORG
--------------------------------------
DROP TABLE IF EXISTS ORG CASCADE;
CREATE TABLE IF NOT EXISTS ORG (
  ORG_CD 		TEXT NOT NULL,
  ORG_NM 		TEXT NOT NULL,
  ORG_DESC 		TEXT NOT NULL,
   REG_ID		TEXT NOT NULL ,
  REG_DT		DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID		TEXT NULL,
  MOD_DT		DATE NULL
);
COMMENT ON TABLE ORG IS '조직';
COMMENT ON COLUMN ORG.ORG_CD 		IS '조직코드';
COMMENT ON COLUMN ORG.ORG_NM 		IS '조직명';
COMMENT ON COLUMN ORG.ORG_DESC 		IS '조직설명';
COMMENT ON COLUMN ORG.REG_ID 		IS '생성자';
COMMENT ON COLUMN ORG.REG_DT 		IS '생성일자';
COMMENT ON COLUMN ORG.MOD_ID 		IS '수정자';
COMMENT ON COLUMN ORG.MOD_DT 		IS '수정일자';

--------------------------------------
-- REPOSITORY
--------------------------------------
DROP TABLE IF EXISTS REPOSITORY CASCADE;
CREATE TABLE IF NOT EXISTS REPOSITORY (
  REPO_NO 		SERIAL PRIMARY KEY,
  REPO_ID 		TEXT NOT NULL,
  REPO_NM 		TEXT NOT NULL,
  REPO_DESC 	TEXT DEFAULT NULL,
  REPO_TYPE 	TEXT NOT NULL,
  REPO_VOLUME 	TEXT NULL,
  ACC_TOKEN 	TEXT NULL,
  REG_ID		TEXT NOT NULL ,
  REG_DT		DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID		TEXT NULL,
  MOD_DT		DATE NULL
);

COMMENT ON TABLE REPOSITORY IS '저장소';
COMMENT ON COLUMN REPOSITORY.REPO_NO 		IS '저장소번호';
COMMENT ON COLUMN REPOSITORY.REPO_ID		IS '저장소ID';
COMMENT ON COLUMN REPOSITORY.REPO_NM		IS '저장소명';
COMMENT ON COLUMN REPOSITORY.REPO_DESC 		IS '저장소설명';
COMMENT ON COLUMN REPOSITORY.REPO_TYPE 		IS '저장소형태 PRIVATE, PUBLIC';
COMMENT ON COLUMN REPOSITORY.REPO_VOLUME 	IS '저장소용량 MB';
COMMENT ON COLUMN REPOSITORY.ACC_TOKEN 		IS '저장소 토큰';
COMMENT ON COLUMN REPOSITORY.REG_ID 		IS '생성자';
COMMENT ON COLUMN REPOSITORY.REG_DT 		IS '생성일자';
COMMENT ON COLUMN REPOSITORY.MOD_ID 		IS '수정자';
COMMENT ON COLUMN REPOSITORY.MOD_DT 		IS '수정일자';

--------------------------------------
-- REPOSITORY_HISTORY
--------------------------------------
DROP TABLE IF EXISTS REPOSITORY_HISTORY CASCADE;
CREATE TABLE IF NOT EXISTS REPOSITORY_HISTORY (
  REPO_HIS_NO 		SERIAL PRIMARY KEY,
  REPO_HIS_TYPE 	TEXT NOT NULL,
  REPO_NO 			INTEGER NOT NULL,
  REPO_ID 			TEXT NOT NULL,
  REPO_NM 			TEXT NOT NULL,
  REPO_DESC 		TEXT NULL,
  REPO_TYPE 		TEXT NOT NULL,
  REPO_VOLUME 		TEXT NULL,
  ACC_TOKEN 		TEXT NULL,
  REG_ID			TEXT NOT NULL ,
  REG_DT			DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID			TEXT NULL,
  MOD_DT			DATE NULL
);

COMMENT ON TABLE REPOSITORY_HISTORY IS '저장소';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_HIS_NO 	IS '저장소이력번호';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_HIS_TYPE 	IS '저장소이력타입(insert,update,delete)';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_NO 		IS '저장소번호';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_ID 		IS '저장소ID';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_NM 		IS '저장소명';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_DESC 		IS '저장소설명';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_TYPE 		IS '저장소형태 PRIVATE, PUBLIC';
COMMENT ON COLUMN REPOSITORY_HISTORY.REPO_VOLUME 	IS '저장소용량 MB';
COMMENT ON COLUMN REPOSITORY_HISTORY.ACC_TOKEN 		IS '저장소 토큰';
COMMENT ON COLUMN REPOSITORY_HISTORY.REG_ID 		IS '생성자';
COMMENT ON COLUMN REPOSITORY_HISTORY.REG_DT 		IS '생성일자';
COMMENT ON COLUMN REPOSITORY_HISTORY.MOD_ID 		IS '수정자';
COMMENT ON COLUMN REPOSITORY_HISTORY.MOD_DT 		IS '수정일자';

--------------------------------------
-- USER
--------------------------------------
DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE IF NOT EXISTS USERS (
  USER_NO     	SERIAL PRIMARY KEY,
  ORG_NO		INTEGER NOT NULL ,
  USER_ID     	TEXT NOT NULL ,
  USER_PASS   	TEXT NOT NULL ,
  AUTH_CD     	TEXT NOT NULL ,
  USER_JOIN_DT 	DATE NOT NULL DEFAULT CURRENT_DATE,
  USER_ADDR   	TEXT NOT NULL,
  USER_TEL		TEXT NOT NULL,
  USER_EMAIL   	TEXT NOT NULL,
  REG_ID		TEXT NOT NULL ,
  REG_DT		DATE NOT NULL DEFAULT CURRENT_DATE,
  MOD_ID		TEXT NULL,
  MOD_DT		DATE NULL
);

COMMENT ON TABLE USERS IS '저장소';
COMMENT ON COLUMN USERS.USER_NO 		IS '사용자번호';
COMMENT ON COLUMN USERS.ORG_NO 			IS '조직번호';
COMMENT ON COLUMN USERS.USER_ID 		IS '사용자명';
COMMENT ON COLUMN USERS.USER_PASS 		IS '사용자비밀번호';
COMMENT ON COLUMN USERS.AUTH_CD 		IS '권한코드';
COMMENT ON COLUMN USERS.USER_JOIN_DT 	IS '가입일';
COMMENT ON COLUMN USERS.USER_ADDR 		IS '주소';
COMMENT ON COLUMN USERS.USER_TEL 		IS '전화번호';
COMMENT ON COLUMN USERS.USER_EMAIL 		IS '이메일';
COMMENT ON COLUMN USERS.REG_ID 			IS '생성자';
COMMENT ON COLUMN USERS.REG_DT 			IS '생성일자';
COMMENT ON COLUMN USERS.MOD_ID 			IS '수정자';
COMMENT ON COLUMN USERS.MOD_DT 			IS '수정일자';

INSERT INTO USERS (ORG_NO, USER_ID, USER_PASS, AUTH_CD, USER_JOIN_DT, USER_ADDR, USER_TEL, USER_EMAIL, REG_ID, REG_DT, MOD_ID, MOD_DT) VALUES
	(1, 'admin', '1234', '01', '2019-12-03', 'myhome', '01011111111', 'Test@TEXT.com', 'admin', '2019-12-03', 'admin', '2019-12-03'),
	(1, 'guest', '1234', '01', '2019-12-03', 'yourhome', '01022222222', 'Test@TEXT.com', 'admin', '2019-12-03', NULL, '2019-12-03');
